{"version":3,"sources":["webpack:///./src/pages/page-2.tsx","webpack:///./src/styles/variables.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Container.tsx","webpack:///./src/styles/mixins.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Page.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/styles/normalize.ts","webpack:///./src/components/Header.tsx","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/layouts/index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_Page__WEBPACK_IMPORTED_MODULE_2__","_components_Container__WEBPACK_IMPORTED_MODULE_3__","_layouts__WEBPACK_IMPORTED_MODULE_4__","PageTwo","to","d","colors","fonts","breakpoints","widths","dimensions","heights","brand","lilac","accent","success","warning","ui","bright","light","whisper","code","gray","dark","copy","calm","white","black","sansSerif","serif","monospace","xs","sm","md","lg","xl","fontSize","regular","large","headingSizes","h1","h2","h3","h4","lineHeight","heading","containerPadding","header","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","react_emotion__WEBPACK_IMPORTED_MODULE_1__","_styles_variables__WEBPACK_IMPORTED_MODULE_2__","_styles_mixins__WEBPACK_IMPORTED_MODULE_3__","StyledContainer","styled","target","getEmSize","Container","_ref","className","_variables__WEBPACK_IMPORTED_MODULE_0__","size","m","module","exports","require","default","StyledPage","Page","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","injectGlobal","StyledHeader","transparentize","HeaderInner","HomepageLink","Link","Header","title","react","StyledLayoutRoot","LayoutRoot","StyledLayoutMain","LayoutMain","IndexLayout","gatsby_browser_entry","components_LayoutRoot","Helmet_default","site","siteMetadata","meta","name","content","description","components_Header","components_LayoutMain","_991718019"],"mappings":"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","file":"component---src-pages-page-2-tsx-8dc00bd834224da01534.js","sourcesContent":["import * as React from 'react'\nimport { Link } from 'gatsby'\n\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport IndexLayout from '../layouts'\n\nconst PageTwo = () => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <h1>Hi from the second page</h1>\n        <p>Welcome to page 2</p>\n        <ul>\n          <li>\n            <Link to=\"/a-markdown-page/\">Show me some Markdown!</Link>\n          </li>\n          <li>\n            <Link to=\"/\">Take me back home.</Link>\n          </li>\n        </ul>\n      </Container>\n    </Page>\n  </IndexLayout>\n)\n\nexport default PageTwo\n","/* tslint:disable:max-line-length */\n\nexport const colors = {\n  brand: '#663399',\n  lilac: '#9d7cbf',\n  accent: '#ffb238',\n  success: '#37b635',\n  warning: '#ec1818',\n  ui: {\n    bright: '#e0d6eb',\n    light: '#f5f3f7',\n    whisper: '#fbfafc'\n  },\n  code: '#fcf6f0',\n  gray: {\n    dark: 'hsla(270, 17.119554496%, 0%, 0.92)',\n    copy: 'hsla(270, 15.797828016000002%, 0%, 0.88)',\n    calm: 'rgba(0, 0, 0, 0.54)'\n  },\n  white: '#fff',\n  black: '#000'\n}\n\nexport const fonts = {\n  sansSerif:\n    '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", Arial, sans-serif',\n  serif: 'Georgia, \"Times New Roman\", Times, serif',\n  monospace: 'Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace, monospace'\n}\n\nexport const breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200\n}\n\nexport const widths = {\n  md: 720,\n  lg: 960,\n  xl: 1140\n}\n\nexport const dimensions = {\n  fontSize: {\n    regular: 16,\n    large: 18\n  },\n  headingSizes: {\n    h1: 2.441,\n    h2: 1.953,\n    h3: 1.563,\n    h4: 1.25\n  },\n  lineHeight: {\n    regular: 1.45,\n    heading: 1.2\n  },\n  containerPadding: 1.5\n}\n\nexport const heights = {\n  header: 60\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import * as React from 'react'\nimport styled from 'react-emotion'\n\nimport { widths } from '../styles/variables'\nimport { getEmSize } from '../styles/mixins'\n\nconst StyledContainer = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n  max-width: ${getEmSize(widths.lg)}em;\n`\n\ninterface ContainerProps {\n  className?: string\n}\n\nconst Container: React.SFC<ContainerProps> = ({ children, className }) => (\n  <StyledContainer className={className}>{children}</StyledContainer>\n)\n\nexport default Container\n","import { dimensions } from './variables'\n\nexport const getEmSize = (size: number) => size / dimensions.fontSize.regular\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from 'react'\nimport styled from 'react-emotion'\n\nimport { dimensions } from '../styles/variables'\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n  padding: ${dimensions.containerPadding}rem;\n  margin-bottom: 3rem;\n`\n\ninterface PageProps {\n  className?: string\n}\n\nconst Page: React.SFC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>\n\nexport default Page\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { injectGlobal } from 'emotion'\nimport { dimensions, fonts, colors, breakpoints } from './variables'\nimport { getEmSize } from './mixins'\n\n// tslint:disable-next-line:no-unused-expression\ninjectGlobal`\n  html {\n    box-sizing: border-box;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n\n  html {\n    font-size: ${dimensions.fontSize.regular}px !important;\n    line-height: ${dimensions.lineHeight.regular} !important;\n  }\n\n  body {\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    font-family: ${fonts.sansSerif};\n    color: ${colors.black};\n    background-color: ${colors.white};\n    -webkit-text-size-adjust: 100%;\n    -ms-text-size-adjust: 100%;\n  }\n\n  a {\n    color: ${colors.brand};\n    text-decoration: none;\n\n    &:hover,\n    &:focus {\n      text-decoration: underline;\n    }\n  }\n\n  img {\n    max-width: 100%;\n    object-fit: contain;\n    position: relative;\n  }\n\n  figure {\n    margin: 2rem 0;\n  }\n\n  figcaption {\n    font-size: 80%;\n  }\n\n  // table {\n  //   // width: 100%;\n  //   margin-bottom: 1rem;\n  //   border: 1px solid ${colors.ui.light};\n  //   font-size: 85%;\n  //   border-collapse: collapse;\n  // }\n\n  // td,\n  // th {\n  //   padding: .25rem .5rem;\n  //   border: 1px solid ${colors.ui.light};\n  // }\n\n  th {\n    text-align: left;\n  }\n\n  tbody {\n    tr {\n      &:nth-child(odd) {\n        td {\n          // background-color: ${colors.ui.whisper};\n        }\n        tr {\n          // background-color: ${colors.ui.whisper};\n        }\n      }\n    }\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin-top: 1.414rem;\n    margin-bottom: .5rem;\n    color: ${colors.black};\n    font-weight: 600;\n    line-height: ${dimensions.lineHeight.heading};\n    text-rendering: optimizeLegibility;\n  }\n\n  h1 {\n    margin-top: 0;\n    font-size: ${dimensions.headingSizes.h1}rem;\n  }\n\n  h2 {\n    font-size: ${dimensions.headingSizes.h2}rem;\n  }\n\n  h3 {\n    font-size: ${dimensions.headingSizes.h3}rem;\n  }\n\n  h4, h5, h6 {\n    font-size: ${dimensions.headingSizes.h4}rem;\n  }\n\n  p {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  strong {\n    color: ${colors.black};\n  }\n\n  ul,\n  ol,\n  dl {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  dt {\n    font-weight: bold;\n  }\n\n  dd {\n    margin-bottom: .5rem;\n  }\n\n  hr {\n    position: relative;\n    margin: 1.5rem 0;\n    border: 0;\n    border-top: 1px solid ${colors.ui.light};\n  }\n\n  blockquote {\n    margin: .8rem 0;\n    padding: .5rem 1rem;\n    border-left: .25rem solid ${colors.ui.light};\n    color: ${colors.gray.calm};\n\n    p {\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n\n    @media (min-width: ${getEmSize(breakpoints.md)}em) {\n      padding-right: 5rem;\n      padding-left: 1.25rem;\n    }\n  }\n`\n","import * as React from 'react'\nimport styled from 'react-emotion'\nimport { transparentize } from 'polished'\nimport { Link } from 'gatsby'\n\nimport { heights, dimensions, colors } from '../styles/variables'\nimport Container from './Container'\n\nconst StyledHeader = styled.header`\n  height: ${heights.header}px;\n  padding: 0 ${dimensions.containerPadding}rem;\n  background-color: ${colors.brand};\n  color: ${transparentize(0.5, colors.white)};\n`\n\nconst HeaderInner = styled(Container)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 100%;\n`\n\nconst HomepageLink = styled(Link)`\n  color: ${colors.white};\n  font-size: 1.5rem;\n  font-weight: 600;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n  }\n`\n\ninterface HeaderProps {\n  title: string\n}\n\nconst Header: React.SFC<HeaderProps> = ({ title }) => (\n  <StyledHeader>\n    <HeaderInner>\n      <HomepageLink to=\"/\">{title}</HomepageLink>\n    </HeaderInner>\n  </StyledHeader>\n)\n\nexport default Header\n","import * as React from 'react'\nimport styled from 'react-emotion'\n\nconst StyledLayoutRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`\n\ninterface LayoutRootProps {\n  className?: string\n}\n\nconst LayoutRoot: React.SFC<LayoutRootProps> = ({ children, className }) => (\n  <StyledLayoutRoot className={className}>{children}</StyledLayoutRoot>\n)\n\nexport default LayoutRoot\n","import * as React from 'react'\nimport styled from 'react-emotion'\n\nconst StyledLayoutMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\ninterface LayoutMainProps {\n  className?: string\n}\n\nconst LayoutMain: React.SFC<LayoutMainProps> = ({ children, className }) => (\n  <StyledLayoutMain className={className}>{children}</StyledLayoutMain>\n)\n\nexport default LayoutMain\n","import * as React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'modern-normalize'\nimport '../styles/normalize'\n\nimport Header from '../components/Header'\nimport LayoutRoot from '../components/LayoutRoot'\nimport LayoutMain from '../components/LayoutMain'\n\ntype StaticQueryProps = {\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n    }\n  }\n}\n\nconst IndexLayout: React.SFC = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query IndexLayoutQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <LayoutRoot>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.description },\n            { name: 'keywords', content: 'gatsbyjs, gatsby, javascript, sample, something' }\n          ]}\n        />\n        <Header title={data.site.siteMetadata.title} />\n        <LayoutMain>{children}</LayoutMain>\n      </LayoutRoot>\n    )}\n  />\n)\n\nexport default IndexLayout\n"],"sourceRoot":""}